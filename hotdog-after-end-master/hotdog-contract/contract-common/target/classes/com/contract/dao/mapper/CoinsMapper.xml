<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.contract.dao.CoinsMapper">
  <resultMap id="BaseResultMap" type="com.contract.entity.Coins">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="coin" jdbcType="VARCHAR" property="coin" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="zbdepth" jdbcType="VARCHAR" property="zbdepth" />
    <result column="openval" jdbcType="DECIMAL" property="openval" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="beginspread" jdbcType="DECIMAL" property="beginspread" />
    <result column="stopspread" jdbcType="DECIMAL" property="stopspread" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="zcstopscale" jdbcType="DECIMAL" property="zcstopscale" />
    <result column="zcscale" jdbcType="DECIMAL" property="zcscale" />
    <result column="zctax" jdbcType="DECIMAL" property="zctax" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    coin, name, symbol, zbdepth, openval, updatetime, beginspread, stopspread, sort, 
    type, zcstopscale, zcscale, zctax
  </sql>
  <select id="selectByExample" parameterType="com.contract.entity.CoinsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from coins
    where coin = #{coin,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from coins
    where coin = #{coin,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.contract.entity.CoinsExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from coins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.contract.entity.Coins">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into coins (coin, name, symbol, 
      zbdepth, openval, updatetime, 
      beginspread, stopspread, sort, 
      type, zcstopscale, zcscale, 
      zctax)
    values (#{coin,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, 
      #{zbdepth,jdbcType=VARCHAR}, #{openval,jdbcType=DECIMAL}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{beginspread,jdbcType=DECIMAL}, #{stopspread,jdbcType=DECIMAL}, #{sort,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{zcstopscale,jdbcType=DECIMAL}, #{zcscale,jdbcType=DECIMAL}, 
      #{zctax,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.contract.entity.Coins">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into coins
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="coin != null">
        coin,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="symbol != null">
        symbol,
      </if>
      <if test="zbdepth != null">
        zbdepth,
      </if>
      <if test="openval != null">
        openval,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="beginspread != null">
        beginspread,
      </if>
      <if test="stopspread != null">
        stopspread,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="zcstopscale != null">
        zcstopscale,
      </if>
      <if test="zcscale != null">
        zcscale,
      </if>
      <if test="zctax != null">
        zctax,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="coin != null">
        #{coin,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="zbdepth != null">
        #{zbdepth,jdbcType=VARCHAR},
      </if>
      <if test="openval != null">
        #{openval,jdbcType=DECIMAL},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="beginspread != null">
        #{beginspread,jdbcType=DECIMAL},
      </if>
      <if test="stopspread != null">
        #{stopspread,jdbcType=DECIMAL},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="zcstopscale != null">
        #{zcstopscale,jdbcType=DECIMAL},
      </if>
      <if test="zcscale != null">
        #{zcscale,jdbcType=DECIMAL},
      </if>
      <if test="zctax != null">
        #{zctax,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.contract.entity.CoinsExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from coins
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coins
    <set>
      <if test="record.coin != null">
        coin = #{record.coin,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.zbdepth != null">
        zbdepth = #{record.zbdepth,jdbcType=VARCHAR},
      </if>
      <if test="record.openval != null">
        openval = #{record.openval,jdbcType=DECIMAL},
      </if>
      <if test="record.updatetime != null">
        updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.beginspread != null">
        beginspread = #{record.beginspread,jdbcType=DECIMAL},
      </if>
      <if test="record.stopspread != null">
        stopspread = #{record.stopspread,jdbcType=DECIMAL},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.zcstopscale != null">
        zcstopscale = #{record.zcstopscale,jdbcType=DECIMAL},
      </if>
      <if test="record.zcscale != null">
        zcscale = #{record.zcscale,jdbcType=DECIMAL},
      </if>
      <if test="record.zctax != null">
        zctax = #{record.zctax,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coins
    set coin = #{record.coin,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      zbdepth = #{record.zbdepth,jdbcType=VARCHAR},
      openval = #{record.openval,jdbcType=DECIMAL},
      updatetime = #{record.updatetime,jdbcType=TIMESTAMP},
      beginspread = #{record.beginspread,jdbcType=DECIMAL},
      stopspread = #{record.stopspread,jdbcType=DECIMAL},
      sort = #{record.sort,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      zcstopscale = #{record.zcstopscale,jdbcType=DECIMAL},
      zcscale = #{record.zcscale,jdbcType=DECIMAL},
      zctax = #{record.zctax,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.contract.entity.Coins">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coins
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="zbdepth != null">
        zbdepth = #{zbdepth,jdbcType=VARCHAR},
      </if>
      <if test="openval != null">
        openval = #{openval,jdbcType=DECIMAL},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="beginspread != null">
        beginspread = #{beginspread,jdbcType=DECIMAL},
      </if>
      <if test="stopspread != null">
        stopspread = #{stopspread,jdbcType=DECIMAL},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="zcstopscale != null">
        zcstopscale = #{zcstopscale,jdbcType=DECIMAL},
      </if>
      <if test="zcscale != null">
        zcscale = #{zcscale,jdbcType=DECIMAL},
      </if>
      <if test="zctax != null">
        zctax = #{zctax,jdbcType=DECIMAL},
      </if>
    </set>
    where coin = #{coin,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.contract.entity.Coins">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update coins
    set name = #{name,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      zbdepth = #{zbdepth,jdbcType=VARCHAR},
      openval = #{openval,jdbcType=DECIMAL},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      beginspread = #{beginspread,jdbcType=DECIMAL},
      stopspread = #{stopspread,jdbcType=DECIMAL},
      sort = #{sort,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      zcstopscale = #{zcstopscale,jdbcType=DECIMAL},
      zcscale = #{zcscale,jdbcType=DECIMAL},
      zctax = #{zctax,jdbcType=DECIMAL}
    where coin = #{coin,jdbcType=VARCHAR}
  </update>
  
  <select id="getBySymbol" parameterType="java.lang.String" resultType="com.contract.entity.Coins">
  		select * from coins where symbol = #{symbol,jdbcType=VARCHAR}
  </select>  
</mapper>