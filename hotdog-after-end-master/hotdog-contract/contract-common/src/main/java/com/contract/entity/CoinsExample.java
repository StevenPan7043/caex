package com.contract.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class CoinsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table coins
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table coins
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table coins
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public CoinsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table coins
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coins
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCoinIsNull() {
            addCriterion("coin is null");
            return (Criteria) this;
        }

        public Criteria andCoinIsNotNull() {
            addCriterion("coin is not null");
            return (Criteria) this;
        }

        public Criteria andCoinEqualTo(String value) {
            addCriterion("coin =", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinNotEqualTo(String value) {
            addCriterion("coin <>", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinGreaterThan(String value) {
            addCriterion("coin >", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinGreaterThanOrEqualTo(String value) {
            addCriterion("coin >=", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinLessThan(String value) {
            addCriterion("coin <", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinLessThanOrEqualTo(String value) {
            addCriterion("coin <=", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinLike(String value) {
            addCriterion("coin like", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinNotLike(String value) {
            addCriterion("coin not like", value, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinIn(List<String> values) {
            addCriterion("coin in", values, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinNotIn(List<String> values) {
            addCriterion("coin not in", values, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinBetween(String value1, String value2) {
            addCriterion("coin between", value1, value2, "coin");
            return (Criteria) this;
        }

        public Criteria andCoinNotBetween(String value1, String value2) {
            addCriterion("coin not between", value1, value2, "coin");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("name is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("name is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("name =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("name <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("name >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("name >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("name <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("name <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("name like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("name not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("name in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("name not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("name between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("name not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNull() {
            addCriterion("symbol is null");
            return (Criteria) this;
        }

        public Criteria andSymbolIsNotNull() {
            addCriterion("symbol is not null");
            return (Criteria) this;
        }

        public Criteria andSymbolEqualTo(String value) {
            addCriterion("symbol =", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotEqualTo(String value) {
            addCriterion("symbol <>", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThan(String value) {
            addCriterion("symbol >", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolGreaterThanOrEqualTo(String value) {
            addCriterion("symbol >=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThan(String value) {
            addCriterion("symbol <", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLessThanOrEqualTo(String value) {
            addCriterion("symbol <=", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolLike(String value) {
            addCriterion("symbol like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotLike(String value) {
            addCriterion("symbol not like", value, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolIn(List<String> values) {
            addCriterion("symbol in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotIn(List<String> values) {
            addCriterion("symbol not in", values, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolBetween(String value1, String value2) {
            addCriterion("symbol between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andSymbolNotBetween(String value1, String value2) {
            addCriterion("symbol not between", value1, value2, "symbol");
            return (Criteria) this;
        }

        public Criteria andZbdepthIsNull() {
            addCriterion("zbdepth is null");
            return (Criteria) this;
        }

        public Criteria andZbdepthIsNotNull() {
            addCriterion("zbdepth is not null");
            return (Criteria) this;
        }

        public Criteria andZbdepthEqualTo(String value) {
            addCriterion("zbdepth =", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthNotEqualTo(String value) {
            addCriterion("zbdepth <>", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthGreaterThan(String value) {
            addCriterion("zbdepth >", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthGreaterThanOrEqualTo(String value) {
            addCriterion("zbdepth >=", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthLessThan(String value) {
            addCriterion("zbdepth <", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthLessThanOrEqualTo(String value) {
            addCriterion("zbdepth <=", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthLike(String value) {
            addCriterion("zbdepth like", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthNotLike(String value) {
            addCriterion("zbdepth not like", value, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthIn(List<String> values) {
            addCriterion("zbdepth in", values, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthNotIn(List<String> values) {
            addCriterion("zbdepth not in", values, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthBetween(String value1, String value2) {
            addCriterion("zbdepth between", value1, value2, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andZbdepthNotBetween(String value1, String value2) {
            addCriterion("zbdepth not between", value1, value2, "zbdepth");
            return (Criteria) this;
        }

        public Criteria andOpenvalIsNull() {
            addCriterion("openval is null");
            return (Criteria) this;
        }

        public Criteria andOpenvalIsNotNull() {
            addCriterion("openval is not null");
            return (Criteria) this;
        }

        public Criteria andOpenvalEqualTo(BigDecimal value) {
            addCriterion("openval =", value, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalNotEqualTo(BigDecimal value) {
            addCriterion("openval <>", value, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalGreaterThan(BigDecimal value) {
            addCriterion("openval >", value, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("openval >=", value, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalLessThan(BigDecimal value) {
            addCriterion("openval <", value, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("openval <=", value, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalIn(List<BigDecimal> values) {
            addCriterion("openval in", values, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalNotIn(List<BigDecimal> values) {
            addCriterion("openval not in", values, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("openval between", value1, value2, "openval");
            return (Criteria) this;
        }

        public Criteria andOpenvalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("openval not between", value1, value2, "openval");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNull() {
            addCriterion("updatetime is null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIsNotNull() {
            addCriterion("updatetime is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeEqualTo(Date value) {
            addCriterion("updatetime =", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotEqualTo(Date value) {
            addCriterion("updatetime <>", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThan(Date value) {
            addCriterion("updatetime >", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("updatetime >=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThan(Date value) {
            addCriterion("updatetime <", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeLessThanOrEqualTo(Date value) {
            addCriterion("updatetime <=", value, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeIn(List<Date> values) {
            addCriterion("updatetime in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotIn(List<Date> values) {
            addCriterion("updatetime not in", values, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeBetween(Date value1, Date value2) {
            addCriterion("updatetime between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andUpdatetimeNotBetween(Date value1, Date value2) {
            addCriterion("updatetime not between", value1, value2, "updatetime");
            return (Criteria) this;
        }

        public Criteria andBeginspreadIsNull() {
            addCriterion("beginspread is null");
            return (Criteria) this;
        }

        public Criteria andBeginspreadIsNotNull() {
            addCriterion("beginspread is not null");
            return (Criteria) this;
        }

        public Criteria andBeginspreadEqualTo(BigDecimal value) {
            addCriterion("beginspread =", value, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadNotEqualTo(BigDecimal value) {
            addCriterion("beginspread <>", value, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadGreaterThan(BigDecimal value) {
            addCriterion("beginspread >", value, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("beginspread >=", value, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadLessThan(BigDecimal value) {
            addCriterion("beginspread <", value, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadLessThanOrEqualTo(BigDecimal value) {
            addCriterion("beginspread <=", value, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadIn(List<BigDecimal> values) {
            addCriterion("beginspread in", values, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadNotIn(List<BigDecimal> values) {
            addCriterion("beginspread not in", values, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("beginspread between", value1, value2, "beginspread");
            return (Criteria) this;
        }

        public Criteria andBeginspreadNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("beginspread not between", value1, value2, "beginspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadIsNull() {
            addCriterion("stopspread is null");
            return (Criteria) this;
        }

        public Criteria andStopspreadIsNotNull() {
            addCriterion("stopspread is not null");
            return (Criteria) this;
        }

        public Criteria andStopspreadEqualTo(BigDecimal value) {
            addCriterion("stopspread =", value, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadNotEqualTo(BigDecimal value) {
            addCriterion("stopspread <>", value, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadGreaterThan(BigDecimal value) {
            addCriterion("stopspread >", value, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("stopspread >=", value, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadLessThan(BigDecimal value) {
            addCriterion("stopspread <", value, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadLessThanOrEqualTo(BigDecimal value) {
            addCriterion("stopspread <=", value, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadIn(List<BigDecimal> values) {
            addCriterion("stopspread in", values, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadNotIn(List<BigDecimal> values) {
            addCriterion("stopspread not in", values, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("stopspread between", value1, value2, "stopspread");
            return (Criteria) this;
        }

        public Criteria andStopspreadNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("stopspread not between", value1, value2, "stopspread");
            return (Criteria) this;
        }

        public Criteria andSortIsNull() {
            addCriterion("sort is null");
            return (Criteria) this;
        }

        public Criteria andSortIsNotNull() {
            addCriterion("sort is not null");
            return (Criteria) this;
        }

        public Criteria andSortEqualTo(Integer value) {
            addCriterion("sort =", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotEqualTo(Integer value) {
            addCriterion("sort <>", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThan(Integer value) {
            addCriterion("sort >", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("sort >=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThan(Integer value) {
            addCriterion("sort <", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortLessThanOrEqualTo(Integer value) {
            addCriterion("sort <=", value, "sort");
            return (Criteria) this;
        }

        public Criteria andSortIn(List<Integer> values) {
            addCriterion("sort in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotIn(List<Integer> values) {
            addCriterion("sort not in", values, "sort");
            return (Criteria) this;
        }

        public Criteria andSortBetween(Integer value1, Integer value2) {
            addCriterion("sort between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andSortNotBetween(Integer value1, Integer value2) {
            addCriterion("sort not between", value1, value2, "sort");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(Integer value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(Integer value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(Integer value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(Integer value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(Integer value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<Integer> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<Integer> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(Integer value1, Integer value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleIsNull() {
            addCriterion("zcstopscale is null");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleIsNotNull() {
            addCriterion("zcstopscale is not null");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleEqualTo(BigDecimal value) {
            addCriterion("zcstopscale =", value, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleNotEqualTo(BigDecimal value) {
            addCriterion("zcstopscale <>", value, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleGreaterThan(BigDecimal value) {
            addCriterion("zcstopscale >", value, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("zcstopscale >=", value, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleLessThan(BigDecimal value) {
            addCriterion("zcstopscale <", value, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleLessThanOrEqualTo(BigDecimal value) {
            addCriterion("zcstopscale <=", value, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleIn(List<BigDecimal> values) {
            addCriterion("zcstopscale in", values, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleNotIn(List<BigDecimal> values) {
            addCriterion("zcstopscale not in", values, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("zcstopscale between", value1, value2, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcstopscaleNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("zcstopscale not between", value1, value2, "zcstopscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleIsNull() {
            addCriterion("zcscale is null");
            return (Criteria) this;
        }

        public Criteria andZcscaleIsNotNull() {
            addCriterion("zcscale is not null");
            return (Criteria) this;
        }

        public Criteria andZcscaleEqualTo(BigDecimal value) {
            addCriterion("zcscale =", value, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleNotEqualTo(BigDecimal value) {
            addCriterion("zcscale <>", value, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleGreaterThan(BigDecimal value) {
            addCriterion("zcscale >", value, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("zcscale >=", value, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleLessThan(BigDecimal value) {
            addCriterion("zcscale <", value, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleLessThanOrEqualTo(BigDecimal value) {
            addCriterion("zcscale <=", value, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleIn(List<BigDecimal> values) {
            addCriterion("zcscale in", values, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleNotIn(List<BigDecimal> values) {
            addCriterion("zcscale not in", values, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("zcscale between", value1, value2, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZcscaleNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("zcscale not between", value1, value2, "zcscale");
            return (Criteria) this;
        }

        public Criteria andZctaxIsNull() {
            addCriterion("zctax is null");
            return (Criteria) this;
        }

        public Criteria andZctaxIsNotNull() {
            addCriterion("zctax is not null");
            return (Criteria) this;
        }

        public Criteria andZctaxEqualTo(BigDecimal value) {
            addCriterion("zctax =", value, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxNotEqualTo(BigDecimal value) {
            addCriterion("zctax <>", value, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxGreaterThan(BigDecimal value) {
            addCriterion("zctax >", value, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("zctax >=", value, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxLessThan(BigDecimal value) {
            addCriterion("zctax <", value, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxLessThanOrEqualTo(BigDecimal value) {
            addCriterion("zctax <=", value, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxIn(List<BigDecimal> values) {
            addCriterion("zctax in", values, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxNotIn(List<BigDecimal> values) {
            addCriterion("zctax not in", values, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("zctax between", value1, value2, "zctax");
            return (Criteria) this;
        }

        public Criteria andZctaxNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("zctax not between", value1, value2, "zctax");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coins
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coins
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}